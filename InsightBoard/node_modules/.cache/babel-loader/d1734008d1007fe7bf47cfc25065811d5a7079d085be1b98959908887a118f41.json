{"ast":null,"code":"/**\r\n * Basic AI pattern identification logic.\r\n * For demo purposes, this analyzes events and returns simple insights.\r\n */\n\nexport function analyzeEvents(events) {\n  if (!events || events.length === 0) return [];\n  const pageViewCounts = {};\n  const clickCounts = {};\n  events.forEach(event => {\n    if (event.type === 'pageview') {\n      pageViewCounts[event.page] = (pageViewCounts[event.page] || 0) + 1;\n    } else if (event.type === 'click') {\n      clickCounts[event.element] = (clickCounts[event.element] || 0) + 1;\n    }\n  });\n  const mostVisitedPage = Object.entries(pageViewCounts).reduce((max, entry) => entry[1] > max[1] ? entry : max, ['', 0])[0];\n  const mostClickedElement = Object.entries(clickCounts).reduce((max, entry) => entry[1] > max[1] ? entry : max, ['', 0])[0];\n  const insights = [];\n  if (mostVisitedPage) {\n    insights.push(`Most visited page is \"${mostVisitedPage}\".`);\n  }\n  if (mostClickedElement) {\n    insights.push(`Most clicked element is \"${mostClickedElement}\".`);\n  }\n  return insights;\n}","map":{"version":3,"names":["analyzeEvents","events","length","pageViewCounts","clickCounts","forEach","event","type","page","element","mostVisitedPage","Object","entries","reduce","max","entry","mostClickedElement","insights","push"],"sources":["E:/2025 Folders/Personal Project 2025/Marketing-APP/InsightBoard/src/aiAnalysis.js"],"sourcesContent":["/**\r\n * Basic AI pattern identification logic.\r\n * For demo purposes, this analyzes events and returns simple insights.\r\n */\r\n\r\nexport function analyzeEvents(events) {\r\n  if (!events || events.length === 0) return [];\r\n\r\n  const pageViewCounts = {};\r\n  const clickCounts = {};\r\n\r\n  events.forEach(event => {\r\n    if (event.type === 'pageview') {\r\n      pageViewCounts[event.page] = (pageViewCounts[event.page] || 0) + 1;\r\n    } else if (event.type === 'click') {\r\n      clickCounts[event.element] = (clickCounts[event.element] || 0) + 1;\r\n    }\r\n  });\r\n\r\n  const mostVisitedPage = Object.entries(pageViewCounts).reduce(\r\n    (max, entry) => (entry[1] > max[1] ? entry : max),\r\n    ['', 0]\r\n  )[0];\r\n\r\n  const mostClickedElement = Object.entries(clickCounts).reduce(\r\n    (max, entry) => (entry[1] > max[1] ? entry : max),\r\n    ['', 0]\r\n  )[0];\r\n\r\n  const insights = [];\r\n\r\n  if (mostVisitedPage) {\r\n    insights.push(`Most visited page is \"${mostVisitedPage}\".`);\r\n  }\r\n  if (mostClickedElement) {\r\n    insights.push(`Most clicked element is \"${mostClickedElement}\".`);\r\n  }\r\n\r\n  return insights;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,aAAaA,CAACC,MAAM,EAAE;EACpC,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;EAE7C,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzB,MAAMC,WAAW,GAAG,CAAC,CAAC;EAEtBH,MAAM,CAACI,OAAO,CAACC,KAAK,IAAI;IACtB,IAAIA,KAAK,CAACC,IAAI,KAAK,UAAU,EAAE;MAC7BJ,cAAc,CAACG,KAAK,CAACE,IAAI,CAAC,GAAG,CAACL,cAAc,CAACG,KAAK,CAACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACpE,CAAC,MAAM,IAAIF,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;MACjCH,WAAW,CAACE,KAAK,CAACG,OAAO,CAAC,GAAG,CAACL,WAAW,CAACE,KAAK,CAACG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACpE;EACF,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACT,cAAc,CAAC,CAACU,MAAM,CAC3D,CAACC,GAAG,EAAEC,KAAK,KAAMA,KAAK,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,KAAK,GAAGD,GAAI,EACjD,CAAC,EAAE,EAAE,CAAC,CACR,CAAC,CAAC,CAAC,CAAC;EAEJ,MAAME,kBAAkB,GAAGL,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAACS,MAAM,CAC3D,CAACC,GAAG,EAAEC,KAAK,KAAMA,KAAK,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,KAAK,GAAGD,GAAI,EACjD,CAAC,EAAE,EAAE,CAAC,CACR,CAAC,CAAC,CAAC,CAAC;EAEJ,MAAMG,QAAQ,GAAG,EAAE;EAEnB,IAAIP,eAAe,EAAE;IACnBO,QAAQ,CAACC,IAAI,CAAC,yBAAyBR,eAAe,IAAI,CAAC;EAC7D;EACA,IAAIM,kBAAkB,EAAE;IACtBC,QAAQ,CAACC,IAAI,CAAC,4BAA4BF,kBAAkB,IAAI,CAAC;EACnE;EAEA,OAAOC,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}